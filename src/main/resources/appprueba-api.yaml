openapi: 3.0.3
info:
  title: Prices API
  version: 1.0.0
  description: Test API REST that allows obtaining the applicable price of a product
    for a brand at a specific date and time.

servers:
  - url: http://localhost:8080
    description: Local server

tags:
  - name: Prices
    description: Endpoints for obtaining prices

paths:
  /api/prices:
    get:
      tags:
        - Prices
      summary: Retrieves the applicable price based on product ID, brand ID, and date.
      description: Returns the price_list and the final price of a product and brand given a date.
        If some price_list has the same date range, the one with the **highest priority** is applied.
      parameters:
        - name: applicationDate
          in: query
          required: true
          description: Date and time with format `2020-06-14-00.00.00`
          schema:
            type: string
            format: date-time
          example: "2020-06-14-00.00.00"
        - name: productId
          in: query
          required: true
          description: Product identifier
          schema:
            type: integer
          example: 35455
        - name: brandId
          in: query
          required: true
          description: Brand identifier
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Applicable price that was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceResponseDTO'
              examples:
                example1:
                  summary: Example of successful response
                  value:
                    productId: 35455
                    brandId: 1
                    priceList: 2
                    startDate: "2020-06-14-00.00.00"
                    endDate: "2020-12-31-23.59.59"
                    price: 25.45
                    curr: "EUR"
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 400
                message: "Invalid parameters"
        '404':
          description: No applicable price was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 404
                message: "No price found for given parameters"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 500
                message: "Internal server error"

components:
  schemas:
    PriceResponseDTO:
      type: object
      description: Precio aplicable
      properties:
        productId:
          type: integer
          example: 35455
        brandId:
          type: integer
          example: 1
        priceList:
          type: integer
          example: 2
        startDate:
          type: string
          format: date-time
          example: "2020-12-31-23.59.59"
        endDate:
          type: string
          format: date-time
          example: "2020-12-31-23.59.59"
        price:
          type: number
          format: double
          example: 25.45
        curr:
          type: string
          example: "EUR"

    ErrorResponse:
      type: object
      description: Error est√°ndar
      properties:
        status:
          type: integer
          example: 404
        message:
          type: string
          example: "No price found for given parameters"